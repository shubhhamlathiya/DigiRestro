<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">

    <title>DigiRestro - OTP</title>

    <link rel="stylesheet" href="assets/vendor/animate/animate.css">
    <link rel="stylesheet" href="assets/css/maicons.css">
    <link rel="stylesheet" href="assets/vendor/owl-carousel/css/owl.carousel.css">
    <link rel="stylesheet" href="assets/css/bootstrap.css">
    <link rel="stylesheet" href="assets/css/theme.css">
</head>
<body>
<main>
    <div class="page-section">
        <div class="container align-self-center">
            <div class="row align-items-center">
                <div class="col-lg-6 py-5 wow zoomIn">
                    <h2 class="title-section" align="center">Digirestro</h2>
                    <div class="img-place text-center">
                        <img src="assets/img/bg_image_3.png" alt="">
                    </div>
                </div>
                <div class="col-lg-6 py-5 wow fadeInUp">
                    <h2 class="title-section">OTP Verification</h2><br/>
                    <p class="text-body">OTP Sent in p***m@gmail.com and Valid
                    <span id="timer">00:00</span>
                    </p>

                    <form action="/otpVerification" method="post">
                        <div id="otp" class="inputs d-flex flex-row mt-2">
                            <input class="m-2 text-center form-control1 rounded" type="text" id="first" name="first" maxlength="1"
                                   required autocomplete="off"
                                   />
                            <input class="m-2 text-center form-control1 rounded" type="text" id="second" name="second"  maxlength="1"
                                   required autocomplete="off"
                                   />
                            <input class="m-2 text-center form-control1 rounded" type="text" id="third" name="third" maxlength="1"
                                   required autocomplete="off"
                                   />
                            <input class="m-2 text-center form-control1 rounded" type="text" id="fourth" name="fourth" maxlength="1"
                                   required autocomplete="off"
                                   />
                            <input class="m-2 text-center form-control1 rounded" type="text" id="fifth" name="fifth" maxlength="1"
                                   required autocomplete="off"
                                   />
                            <input class="m-2 text-center form-control1 rounded" type="text" id="sixth" name="sixth" maxlength="1"
                                   required autocomplete="off"
                                   />
                                   <!-- <input class="m-2 text-center form-control1 rounded" type="text" id="first" name="first" maxlength="1"
                                   required autocomplete="off"
                                   onkeypress="return (event.charCode >= 48 && event.charCode <= 57)"/>
                            <input class="m-2 text-center form-control1 rounded" type="text" id="second" name="second"  maxlength="1"
                                   required autocomplete="off"
                                   onkeypress="return (event.charCode >= 48 && event.charCode <= 57)"/>
                            <input class="m-2 text-center form-control1 rounded" type="text" id="third" name="third" maxlength="1"
                                   required autocomplete="off"
                                   onkeypress="return (event.charCode >= 48 && event.charCode <= 57)"/>
                            <input class="m-2 text-center form-control1 rounded" type="text" id="fourth" name="fourth" maxlength="1"
                                   required autocomplete="off"
                                   onkeypress="return (event.charCode >= 48 && event.charCode <= 57)"/>
                            <input class="m-2 text-center form-control1 rounded" type="text" id="fifth" name="fifth" maxlength="1"
                                   required autocomplete="off"
                                   onkeypress="return (event.charCode >= 48 && event.charCode <= 57)"/>
                            <input class="m-2 text-center form-control1 rounded" type="text" id="sixth" name="sixth" maxlength="1"
                                   required autocomplete="off"
                                   onkeypress="return (event.charCode >= 48 && event.charCode <= 57)"/> -->
                        </div>
                        <button type="submit" class="btn btn-primary rounded-pill mt-4" >Verify & Submit
                        </button>
                        <button type="submit" class="btn btn-primary rounded-pill mt-4" id="resendBtn">
                            Resend OTP
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</main>
<script href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.1.0/js/bootstrap.min.js"></script>
<script>
    //otp
    // document.addEventListener("DOMContentLoaded", function (event) {
    //     function OTPInput() {
    //         const inputs = document.querySelectorAll('#otp > *[id]');
    //         for (let i = 0; i < inputs.length; i++) {
    //             inputs[i].addEventListener('keydown', function (event) {
    //                 if (event.key === "Backspace") {
    //                     inputs[i].value = '';
    //                     if (i !== 0) inputs[i - 1].focus();
    //                 } else {
    //                     if (i === inputs.length - 1 && inputs[i].value !== '' && !isNaN(inputs[i].value)) {
    //                         return true;
    //                     } else if (event.keyCode > 47 && event.keyCode < 58) {
    //                         inputs[i].value = event.key;
    //                         if (i !== inputs.length - 1) inputs[i + 1].focus();
    //                         event.preventDefault();
    //                     } else {
    //                         event.preventDefault(); // Prevent input for non-numeric keys
    //                     }
    //                 }
    //             });
    //         }
    //     }

    //     OTPInput();
    // });

    //timer
    function startTimer(duration, display, button) {
        let timer = duration, minutes, seconds;
        let intervalId = setInterval(function () {
            minutes = parseInt(timer / 60, 10);
            seconds = parseInt(timer % 60, 10);

            minutes = minutes < 10 ? "0" + minutes : minutes;
            seconds = seconds < 10 ? "0" + seconds : seconds;

            display.textContent = minutes + ":" + seconds;

            if (--timer < 0) {
                clearInterval(intervalId);
                display.textContent = "00:00";
                button.removeAttribute('disabled');
                timer = duration;
            }

            // Save the remaining time to localStorage
            localStorage.setItem('timer', timer);
        }, 1000);
        return intervalId;
    }

    window.onload = function () {
        const twoMinutes = 3 * 60;
        const display = document.querySelector('#timer');
        const resendBtn = document.querySelector('#resendBtn');

        // Get the remaining time from localStorage
        let remainingTime = localStorage.getItem('timer');

        if (remainingTime === null) {
            remainingTime = twoMinutes;
        }

        if (remainingTime > 0) {
            // Disable the button if there is remaining time
            resendBtn.setAttribute('disabled', 'true');
            // Start the timer with remaining time
            let intervalId = startTimer(remainingTime, display, resendBtn);

            // Enable the button on click and restart the timer
            resendBtn.addEventListener('click', function () {
                clearInterval(intervalId);
                resendBtn.setAttribute('disabled', 'true');
                remainingTime = twoMinutes;
                intervalId = startTimer(remainingTime, display, resendBtn);
            });
        } else {
            // Enable the button if there is no remaining time
            resendBtn.removeAttribute('disabled');
        }
    };
</script>

<script src="assets/js/jquery-3.5.1.min.js"></script>
<script src="assets/js/bootstrap.bundle.min.js"></script>
<script src="assets/js/theme.js"></script>
<script src="assets/vendor/wow/wow.min.js"></script>
<script src="assets/vendor/owl-carousel/js/owl.carousel.min.js"></script>
<script src="assets/vendor/waypoints/jquery.waypoints.min.js"></script>
<script src="assets/vendor/animateNumber/jquery.animateNumber.min.js"></script>
</body>
</html>